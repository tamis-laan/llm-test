version: '3'

services:

  lm:
    image: lm:latest
    hostname: lm
    build:
      context: ./lm/
      dockerfile: lm.Dockerfile
    ports:
      - "3030:8080"
    volumes:
      - ./lm:/app:ro
    command: sh -c "find . -name '*.py' | entr -nrc uvicorn main:app --host 0.0.0.0 --port 8080"
    restart: always

  api:
    image: api:latest
    hostname: api
    build:
      dockerfile: api.Dockerfile
      target: builder
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - ./:/app:ro
    depends_on:
      database:
        condition: service_healthy
    command: ["make","dev-api"]
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:8080/health"]
      interval: 4s
      timeout: 5s
      retries: 5

  database:
    image: postgres:alpine
    build:
      dockerfile: postgres.Dockerfile
    hostname: postgres
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    tmpfs:
      - /var/lib/postgresql/data # Disable persistence
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser", "-d", "mydb", "-h", "localhost", "-p", "5432"]
      interval: 4s
      timeout: 5s
      retries: 5
